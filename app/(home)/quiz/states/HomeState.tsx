import { Button } from "@/components/ui/button";
import { quizTopics } from "@/data/quiz-topic";
import { ArrowRight, LucideIcon, MousePointer } from "lucide-react";
import Break from "../../components/Break";
import End from "../../components/End";
import Hero from "../../components/Hero";

type Props = {
  onStartQuiz: (topicId: string) => Promise<void>;
};

const HomeState = ({ onStartQuiz }: Props) => {
  return (
    <div
      style={{
        background:
          "repeating-linear-gradient(to bottom, transparent, color-mix(in oklab, var(--color-fd-primary) 1%, transparent) 500px, transparent 1000px)",
      }}
    >
      <Hero
        title="‡∏ö‡∏±‡∏ì‡∏ë‡∏¥‡∏ï‡∏¢‡πà‡∏≠‡∏°‡∏ù‡∏∂‡∏Å‡∏ï‡∏ô ‡∏Ø"
        description="‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏π‡πà‡∏™‡∏ô‡∏≤‡∏°‡∏™‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏∏‡πà‡∏á‡∏´‡∏ß‡∏±‡∏á! üíØ"
      />

      <div
        lang="th"
        className="grid grid-cols-1 border-r md:grid-cols-2 lg:grid-cols-3"
      >
        <div className="col-span-full flex flex-row items-start justify-center border-l border-t p-8 pb-1 text-center">
          <h2 className="bg-fd-primary text-fd-primary-foreground px-1 text-2xl font-semibold">
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          </h2>
          <MousePointer className="-ml-1 mt-8" />
        </div>
        <div className="col-span-full flex flex-row text-xs text-fd-muted-foreground items-start justify-center border-l  pb-6 text-center">
          ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏∏‡∏¢‡∏ó‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏™‡∏≠‡∏ö ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏°‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô
        </div>

        {quizTopics.map((topic) => (
          <TopicCard
            key={topic.id}
            id={topic.id}
            title={topic.title}
            description={topic.description}
            time={topic.time}
            amount={topic.amount}
            icon={topic.icon}
            onStartQuiz={onStartQuiz}
          />
        ))}
      </div>

      <Break word="‡∏≠‡∏ï‡∏∫‡∏ï‡∏≤ ‡∏´‡πÄ‡∏ß ‡∏ä‡∏¥‡∏ï‡πç ‡πÄ‡∏™‡∏¢‡∏∫‡πÇ‡∏¢." meaning="‡∏ä‡∏ô‡∏∞‡∏ï‡∏ô‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞ ‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏µ ‡∏Ø" />
      <End />
    </div>
  );
};

export default HomeState;

interface TopicCardProps {
  id: string;
  time: number;
  amount: number;
  title: string;
  description: string;
  // imageUrl?: string;
  icon: LucideIcon;
  onStartQuiz: (topicId: string) => void;
}
const TopicCard = ({
  id,
  title,
  description,
  amount,
  time,
  icon: Icon,
  onStartQuiz,
}: TopicCardProps): React.ReactElement => {
  return (
    <div className="border-l border-t px-6 py-12">
      <div className="mb-4 flex flex-row items-center gap-2 text-fd-muted-foreground">
        <Icon className="size-4" />
        <h2 className="text-sm font-medium">{title}</h2>
      </div>
      <span className="font-medium">{description}</span>
      <p className="text-xs text-fd-muted-foreground mt-4">
        {` ${amount} ‡∏Ç‡πâ‡∏≠ ‚Ä¢ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ${time} ‡∏ô‡∏≤‡∏ó‡∏µ`}
      </p>

      <div className="inline-flex items-center mt-4 max-md:mx-auto">
        <Button
          onClick={() => onStartQuiz(id)}
          className="rounded-full"
          size="sm"
        >
          ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          <ArrowRight />
        </Button>
      </div>
    </div>
  );
};
